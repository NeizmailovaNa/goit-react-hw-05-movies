{"version":3,"file":"static/js/433.eb88ee50.chunk.js","mappings":"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","sources":["API/filmsApi.js","webpack://react-homework-template/./src/components/Home/Home.module.css?58dd","components/Home/Home.jsx","webpack://react-homework-template/./src/others/MovieList/MovieList.module.css?656d","others/MovieList/MovieList.jsx","webpack://react-homework-template/./src/others/NotFound/NotFound.module.css?cd87","others/NotFound/NotFound.jsx","others/Spiner.jsx"],"sourcesContent":["import axios from 'axios';\nconst keyApi = 'b501d5de5d137bb5d7d9e646e8498b17';\n\nasync function onFetch() {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${keyApi}`\n  );\n  return resp.data.results;\n}\nasync function onFetchSearch(search) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${keyApi}&query=${search}`\n  );\n\n  if (resp.status !== 200 || resp.data.total_results === 0) {\n    throw new Error();\n  } else return resp.data.results;\n}\nasync function onFetchFilm(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}`\n  );\n  return resp.data;\n}\n\nasync function onFetchCast(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${keyApi}`\n  );\n  return resp.data.cast;\n}\n\nasync function onFetchReviews(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${keyApi}`\n  );\n  return resp.data.results;\n}\n\nexport { onFetch, onFetchFilm, onFetchCast, onFetchReviews, onFetchSearch };\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"Home_home__Iy41P\"};","import { onFetch } from 'API/filmsApi';\nimport { useEffect, useState } from 'react';\nimport css from './Home.module.css';\nimport Spiner from 'others/Spiner';\nimport MovieList from 'others/MovieList/MovieList';\nimport NotFound from 'others/NotFound/NotFound';\n\nconst Home = () => {\n  const [films, setfilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await onFetch();\n        if (data === 0) {\n          return;\n        }\n        setfilms(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      {error && <NotFound />}\n      <h2 className={css.title}>Trending today:</h2>\n      {films.length !== 0 && <MovieList moviesList={films} />}\n    </>\n  );\n};\nexport default Home;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__QL5Xh\",\"listItem\":\"MovieList_listItem__MTGYo\",\"listLink\":\"MovieList_listLink__oIGh1\"};","import css from './MovieList.module.css';\nimport { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noImg from '../../img/noImg.jpeg';\n\nconst MovieList = ({ moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {moviesList.map(movie => {\n        return (\n          <li key={movie.id} className={css.listItem}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className={css.listLink}\n            >\n              {movie.poster_path && (\n                <img\n                  src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n                  alt={movie.title}\n                  width=\"240px\"\n                />\n              )}\n              {!movie.poster_path && (\n                <img src={noImg} alt={movie.title} width=\"200px\" />\n              )}\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"NotFound_wrap__pSqrM\"};","import { Link } from 'react-router-dom';\nimport css from './NotFound.module.css';\nimport ntf from '../../img/nfi.jpeg';\n\nconst NotFound = () => {\n  return (\n    <div className={css.wrap}>\n      <img src={ntf} alt=\"404 page not found\" className={css.ntf}></img>\n      <b>\n        Sorry, the page not found. The link you followed broken or the page has\n        been removed.\n      </b>\n      <Link to=\"/\" className={css.link}>\n        Go Home\n      </Link>\n    </div>\n  );\n};\nexport default NotFound;","import { ColorRing } from 'react-loader-spinner';\nconst Spiner = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#525a69', '#898dda', '#7b81ec', '#898dda', '#7b81ec']}\n    />\n  );\n};\nexport default Spiner;"],"names":["keyApi","onFetch","axios","resp","data","results","onFetchSearch","search","status","total_results","Error","onFetchFilm","id","onFetchCast","cast","onFetchReviews","useState","films","setfilms","isLoading","setIsLoading","error","setError","useEffect","fetchData","Spiner","wrapperStyle","fill","NotFound","className","css","length","MovieList","moviesList","location","useLocation","map","movie","to","state","from","poster_path","src","alt","title","width","noImg","ntf","visible","height","ariaLabel","wrapperClass","colors"],"sourceRoot":""}