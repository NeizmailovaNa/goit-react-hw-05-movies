{"version":3,"file":"static/js/888.120a9459.chunk.js","mappings":"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","sources":["API/filmsApi.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/others/NotFound/NotFound.module.css?cd87","others/NotFound/NotFound.jsx","others/Spiner.jsx"],"sourcesContent":["import axios from 'axios';\nconst keyApi = 'b501d5de5d137bb5d7d9e646e8498b17';\n\nasync function onFetch() {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${keyApi}`\n  );\n  return resp.data.results;\n}\nasync function onFetchSearch(search) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${keyApi}&query=${search}`\n  );\n\n  if (resp.status !== 200 || resp.data.total_results === 0) {\n    throw new Error();\n  } else return resp.data.results;\n}\nasync function onFetchFilm(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}`\n  );\n  return resp.data;\n}\n\nasync function onFetchCast(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${keyApi}`\n  );\n  return resp.data.cast;\n}\n\nasync function onFetchReviews(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${keyApi}`\n  );\n  return resp.data.results;\n}\n\nexport { onFetch, onFetchFilm, onFetchCast, onFetchReviews, onFetchSearch };\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\"};","import { useEffect, useState } from 'react';\nimport { onFetchFilm } from '../../API/filmsApi';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport noImg from '../../img/noImg.jpeg';\nimport Spiner from 'others/Spiner';\nimport NotFound from 'others/NotFound/NotFound';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState(null);\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await onFetchFilm(movieId);\n        if (data === 0) {\n          return;\n        }\n        setFilm(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const genresNames = film\n    ? film.genres.map(genre => genre.name).join(', ')\n    : '';\n\n  return (\n    <>\n      {error && <NotFound />}\n\n      <Link to={goBack} className={css.links}>\n        Go back\n      </Link>\n      {isLoading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      {film && (\n        <div className={css.card}>\n          {film.poster_path && (\n            <img\n              src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${film.poster_path}`}\n              alt={film.title}\n              width=\"400px\"\n            />\n          )}\n          {!film.poster_path && (\n            <img src={noImg} alt={film.title} width=\"400px\" />\n          )}\n          <div className={css.info}>\n            <h2>\n              {film.title} ( {film.release_date.slice(0, 4)} )\n            </h2>\n            <p>User score: {film.vote_average}</p>\n            <h3>Overview</h3>\n            <p>{film.overview}</p>\n            <h4>Genres</h4>\n            <p>{genresNames}</p>\n            <Link to=\"cast\" className={css.links} state={{ from: goBack }}>\n              Cast\n            </Link>\n            <Link to=\"reviews\" className={css.links} state={{ from: goBack }}>\n              Reviews\n            </Link>\n          </div>\n        </div>\n      )}\n\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"NotFound_wrap__pSqrM\"};","import { Link } from 'react-router-dom';\nimport css from './NotFound.module.css';\nimport ntf from '../../img/nfi.jpeg';\n\nconst NotFound = () => {\n  return (\n    <div className={css.wrap}>\n      <img src={ntf} alt=\"404 page not found\" className={css.ntf}></img>\n      <b>\n        Sorry, the page not found. The link you followed broken or the page has\n        been removed.\n      </b>\n      <Link to=\"/\" className={css.link}>\n        Go Home\n      </Link>\n    </div>\n  );\n};\nexport default NotFound;","import { ColorRing } from 'react-loader-spinner';\nconst Spiner = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#525a69', '#898dda', '#7b81ec', '#898dda', '#7b81ec']}\n    />\n  );\n};\nexport default Spiner;"],"names":["keyApi","onFetch","axios","resp","data","results","onFetchSearch","search","status","total_results","Error","onFetchFilm","id","onFetchCast","cast","onFetchReviews","useState","film","setFilm","goBack","useLocation","state","from","movieId","useParams","isLoading","setIsLoading","error","setError","useEffect","fetchData","genresNames","genres","map","genre","name","join","NotFound","to","className","css","Spiner","wrapperStyle","fill","poster_path","src","alt","title","width","noImg","release_date","slice","vote_average","overview","ntf","visible","height","ariaLabel","wrapperClass","colors"],"sourceRoot":""}