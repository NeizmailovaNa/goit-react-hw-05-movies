{"version":3,"file":"static/js/168.a12017af.chunk.js","mappings":"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","sources":["API/filmsApi.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/others/NotFound/NotFound.module.css?cd87","others/NotFound/NotFound.jsx","others/Spiner.jsx"],"sourcesContent":["import axios from 'axios';\nconst keyApi = 'b501d5de5d137bb5d7d9e646e8498b17';\n\nasync function onFetch() {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${keyApi}`\n  );\n  return resp.data.results;\n}\nasync function onFetchSearch(search) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${keyApi}&query=${search}`\n  );\n\n  if (resp.status !== 200 || resp.data.total_results === 0) {\n    throw new Error();\n  } else return resp.data.results;\n}\nasync function onFetchFilm(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${keyApi}`\n  );\n  return resp.data;\n}\n\nasync function onFetchCast(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${keyApi}`\n  );\n  return resp.data.cast;\n}\n\nasync function onFetchReviews(id) {\n  const resp = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${keyApi}`\n  );\n  return resp.data.results;\n}\n\nexport { onFetch, onFetchFilm, onFetchCast, onFetchReviews, onFetchSearch };\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { onFetchReviews } from '../../API/filmsApi';\nimport css from './Reviews.module.css';\nimport Spiner from 'others/Spiner';\nimport NotFound from 'others/NotFound/NotFound';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const data = await onFetchReviews(movieId);\n        if (data === 0) {\n          return;\n        }\n        setReviews(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Spiner wrapperStyle={{ fill: '#7b81ec' }} />}\n      {error && <NotFound />}\n      {reviews.length === 0 && <b>Sorry, there are no reviews yet.</b>}\n      <ul className={css.reviewList}>\n        {reviews.map(item => {\n          return (\n            <li key={item.id}>\n              <b>Author: {item.author}</b>\n              <p>{item.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"NotFound_wrap__pSqrM\"};","import { Link } from 'react-router-dom';\nimport css from './NotFound.module.css';\nimport ntf from '../../img/nfi.jpeg';\n\nconst NotFound = () => {\n  return (\n    <div className={css.wrap}>\n      <img src={ntf} alt=\"404 page not found\" className={css.ntf}></img>\n      <b>\n        Sorry, the page not found. The link you followed broken or the page has\n        been removed.\n      </b>\n      <Link to=\"/\" className={css.link}>\n        Go Home\n      </Link>\n    </div>\n  );\n};\nexport default NotFound;","import { ColorRing } from 'react-loader-spinner';\nconst Spiner = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#525a69', '#898dda', '#7b81ec', '#898dda', '#7b81ec']}\n    />\n  );\n};\nexport default Spiner;"],"names":["keyApi","onFetch","axios","resp","data","results","onFetchSearch","search","status","total_results","Error","onFetchFilm","id","onFetchCast","cast","onFetchReviews","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","Spiner","wrapperStyle","fill","NotFound","length","className","css","map","item","author","content","src","ntf","alt","to","visible","height","width","ariaLabel","wrapperClass","colors"],"sourceRoot":""}